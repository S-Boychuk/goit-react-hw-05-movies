{"version":3,"file":"static/js/652.feef13b0.chunk.js","mappings":"2LACA,EAA8B,gCAA9B,EAAiF,qCAAjF,EAAyI,qC,SC2BzI,EAxBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACf,eAAIH,UAAWC,EAAf,UACE,SAAC,KAAD,CACED,UAAWC,EACXG,GAAE,kBAAaD,EAAME,IACrBC,MAAOR,EAHT,SAKGK,EAAMI,SANkCJ,EAAME,GADpC,KAatB,C,8ICrBD,EAAuB,wBAAvB,EAAwD,0BAAxD,EAA0F,yB,SC+C1F,EA3CkB,SAAC,GAAwB,IAAtBG,EAAqB,EAArBA,eACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACAC,QAAQC,IAAI,cAAeH,GAkB3B,OACE,kBAAMb,UAAWC,EAAUgB,SARR,SAAAC,GALK,IAAAC,EAMxBD,EAAEE,iBACFZ,EAAeE,GALfI,EAD4B,MADJK,EAQNT,GAPe,CAAES,KAAAA,GAAS,CAAC,GAQ7CR,EAAS,GACV,EAGC,WACE,kBACEX,UAAWC,EACXoB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZd,MAAOA,EACPe,SAzBe,SAAC,GAA2B,IAAff,EAAc,EAAxBgB,OAAUhB,MAChCC,EAASD,EACV,KAyBG,mBAAQV,UAAWC,EAAYoB,KAAK,SAApC,sBAKL,E,kBCYD,EA9Ce,WAAO,IAAD,EACnB,GAAsCZ,EAAAA,EAAAA,UAAS,IAA/C,eAAOkB,EAAP,KAAoBC,EAApB,KACA,GAAwCnB,EAAAA,EAAAA,UAAS,IAAjD,eAAOoB,EAAP,KAAqBC,EAArB,KACA,GAAwClB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMiB,EAAqB,UAAGlB,EAAamB,IAAI,eAApB,QAA+B,GA0B1D,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gGAETH,EAFS,kEAKWI,EAAAA,EAAAA,IAAgBJ,GAL3B,OAKNK,EALM,OAMZN,EAAgBM,EAASC,SANb,yDASdtB,QAAQuB,MAAR,MATc,0DAAH,qDAYfJ,GACD,GAAE,CAACpB,EAAiBiB,KAGnB,2BACE,SAACQ,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,YACE,SAAC,EAAD,CAAWhC,eAtBI,SAAAmB,GAAW,OAAIC,EAAeD,EAAnB,IAuBzBA,GAAuC,IAAxBE,EAAaY,QAC3B,cAAGC,MA9BE,CACbC,UAAW,OACXC,SAAU,OACVC,WAAY,KA2BJ,mDAEA,SAACC,EAAA,EAAD,CAAYjD,OAAQgC,UAM/B,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movies-list\":\"MoviesList_movies-list__xnKYG\",\"movies-list-item\":\"MoviesList_movies-list-item__4FSZU\",\"movies-list-link\":\"MoviesList_movies-list-link__jqNqZ\",\"no-found-text\":\"MoviesList_no-found-text__rmp-e\"};","import { Link, useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css['movies-list']}>\n      {movies.map(movie => (\n        <li className={css['movies-list-item']} key={movie.id}>\n          <Link\n            className={css['movies-list-link']}\n            to={`/movies/${movie.id}`}\n            state={location}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"button\":\"SearchBar_button__T7RTc\",\"input\":\"SearchBar_input__bIy50\"};","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport css from './SearchBar.module.css';\n\nconst SearchBar = ({ getSearchQuery }) => {\n  const [value, setValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  console.log('object :>> ', searchParams);\n\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getSearchQuery(value);\n    updateQueryString(value);\n    setValue('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.input}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search films\"\n        value={value}\n        onChange={handleChange}\n      />\n      <button className={css.button} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  getSearchQuery: PropTypes.func,\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Container from 'components/Container/Container';\nimport Section from 'components/Section/Section';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { getSearchMovies } from '../services/MoviesApi';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const httpGetParamMovieName = searchParams.get('name') ?? '';\n\n  const styles = {\n    marginTop: '20px',\n    fontSize: '24px',\n    fontWeight: 700,\n  };\n\n  const getSearchQuery = searchQuery => setSearchQuery(searchQuery);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (!httpGetParamMovieName) {\n          return;\n        } else {\n          const response = await getSearchMovies(httpGetParamMovieName);\n          setSearchMovies(response.results);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, [setSearchParams, httpGetParamMovieName]);\n\n  return (\n    <main>\n      <Section>\n        <Container>\n          <SearchBar getSearchQuery={getSearchQuery}></SearchBar>\n          {searchQuery && searchMovies.length === 0 ? (\n            <p style={styles}>Sorry, we have not found any movies.</p>\n          ) : (\n            <MoviesList movies={searchMovies} />\n          )}\n        </Container>\n      </Section>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["movies","location","useLocation","className","css","map","movie","to","id","state","title","getSearchQuery","useState","value","setValue","useSearchParams","searchParams","setSearchParams","console","log","onSubmit","e","name","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","searchQuery","setSearchQuery","searchMovies","setSearchMovies","httpGetParamMovieName","get","useEffect","fetchData","getSearchMovies","response","results","error","Section","Container","length","style","marginTop","fontSize","fontWeight","MoviesList"],"sourceRoot":""}